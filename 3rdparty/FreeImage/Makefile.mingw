# MinGW makefile for FreeImage

.SUFFIXES:

# This file can be generated by ./gensrclist.sh
include Makefile.srcs

# General configuration variables.
DESTDIR ?= $(SystemRoot)
INSTALLDIR ?= $(DESTDIR)/system32
DISTDIR ?= Dist
SRCDIR ?= Source
HEADER := FreeImage.h
RCFILE := FreeImage.rc

TARGET := FreeImage
STATICLIB := lib$(TARGET).a
SHAREDLIB := $(TARGET).dll
IMPORTLIB := $(TARGET).lib
EXPORTLIB := $(TARGET).exp
SOLIBNAME := $(SHAREDLIB).$(VER_MAJOR)

DISTSHARED := $(addprefix $(DISTDIR)/, $(SHAREDLIB) $(IMPORTLIB) $(HEADER))
DISTSTATIC := $(addprefix $(DISTDIR)/, $(STATICLIB) $(HEADER))

# Uncomment this variable to make a static library. This may
# also be specified as an environment variable and can hold
# any of STATIC and SHARED and must be in uppercase letters.
# Default: SHARED
#FREEIMAGE_LIBRARY_TYPE := STATIC

# The FreeImage library type defaults to SHARED.
FREEIMAGE_LIBRARY_TYPE ?= SHARED

WIN32_STATIC_FLAGS := -DFREEIMAGE_LIB
WIN32_SHARED_FLAGS := -DFREEIMAGE_EXPORTS

TARGETLIB := $($(FREEIMAGE_LIBRARY_TYPE)LIB)
TARGETDIST := $(DIST$(FREEIMAGE_LIBRARY_TYPE))
LIB_TYPE_FLAGS := $(WIN32_$(FREEIMAGE_LIBRARY_TYPE)_FLAGS)

CC ?= gcc
ifeq ($(CC), cc)
	CC := gcc
endif
CXX ?= g++
LD ?= g++
NASM ?= yasm
DLLTOOL := dlltool
RC := windres
CP := cp
MD := mkdir
RM := rm

# Define additional libraries needed.
# libstdc++ is included by default with MinGW, however for
# WIN32 based builds, LibRawLite needs the winsock libraries.
LIBRARIES := -lws2_32

# Define some additional symboles needed for WIN32 based builds.
WIN32_CFLAGS := -DWINVER=0x0500 $(LIB_TYPE_FLAGS) -DOPJ_STATIC
WIN32_CXXFLAGS := $(WIN32_CFLAGS) -DLIBRAW_NODLL

# Workaround for LibRawLite, which does not include C++ header
# file stdexcept, which is casually included with MSVC but not
# with MinGW. This can be removed after LibRawLite got control
# over its includes again.
WIN32_CXXFLAGS += -include stdexcept 

# Define DLL image header information flags for the linker.
WIN32_LDFLAGS := -Wl,--subsystem,windows:5.0,--major-os-version,5

RESOURCE := $(RCFILE:.rc=.coff)
C_CXX_FLAGS ?= -O3 -fdata-sections -ffunction-sections -pipe -Wno-attributes -fexceptions -DNDEBUG
CFLAGS ?= $(C_CXX_FLAGS) -DDISABLE_PERF_MEASUREMENT $(WIN32_CFLAGS)
CFLAGS += $(INCLUDE)
CXXFLAGS ?= -std=c++11 $(C_CXX_FLAGS) -Wno-ctor-dtor-privacy $(WIN32_CXXFLAGS)
CXXFLAGS += $(INCLUDE)
RCFLAGS ?= -DNDEBUG
LDFLAGS ?= -s -shared -static -Wl,-soname,$(SOLIBNAME) $(WIN32_LDFLAGS)
DLLTOOLFLAGS ?= --add-stdcall-underscore

ifeq ($(MSYSTEM), MINGW64)
 	NAFLAGS := -fwin64 -DWIN64 -D__x86_64__
 	MODULES := $(SRCS) $(libsimd_64_SOURCES)
else ifeq ($(MSYSTEM), MINGW32)
 	NAFLAGS := -fwin32 -DWIN32
 	MODULES := $(SRCS) $(libsimd_SOURCES)
else
 	$(error "Unsupported architecture found. MSYSTEM shall be set either 'MINGW32' or 'MINGW64'.")
endif

MODULES := $(MODULES:.asm=.asm.o)
MODULES := $(MODULES:.c=.c.o)
MODULES := $(MODULES:.cpp=.cpp.o)

default : all

all : mkdist

rebuild : clean all

mkdist : FreeImage $(TARGETDIST)

FreeImage : $(TARGETLIB)

%.c.o : %.c
	$(CC) $(CFLAGS) -c $< -o $@

%.cpp.o : %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

%.asm.o : %.asm ./Source/LibJPEG/simd/jsimdcfg.inc
	$(NASM) $(NAFLAGS) -I./Source/LibJPEG/simd/ $< -o $@

./Source/LibJPEG/simd/jsimdcfg.inc :
	$(CC) -E -I. -I./Source/LibJPEG/simd/ ./Source/LibJPEG/simd/jsimdcfg.inc.h | grep -e "^[\;%]" | sed 's%_cpp_protection_%%' | sed 's@% define@%define@g' > $@

%.coff : %.rc
	$(RC) $(RCFLAGS) -o $@ $<

$(DISTDIR)/% : %
	$(CP) $< $@

$(DISTDIR)/% : $(SRCDIR)/%
	$(CP) $< $@

$(STATICLIB) : $(MODULES)
	$(AR) rs $@ $(MODULES)

$(IMPORTLIB) $(EXPORTLIB) : $(MODULES) 
	$(DLLTOOL) -e $(EXPORTLIB) -l $(IMPORTLIB) -D $(SHAREDLIB) $(DLLTOOLFLAGS) $(MODULES)

$(SHAREDLIB) : $(EXPORTLIB) $(RESOURCE)
	$(LD) $(LDFLAGS) -o $@ $(EXPORTLIB) $(MODULES) $(RESOURCE) $(LIBRARIES)

$(DISTDIR) :
	$(MD) $(DISTDIR)

$(TARGETDIST) : $(DISTDIR)

install :
	$(CP) $(SHAREDLIB) $(INSTALLDIR)

clean :
	$(RM) -f core $(DISTDIR)/*.* $(MODULES) $(RESOURCE) $(STATICLIB) $(SHAREDLIB) $(IMPORTLIB) $(EXPORTLIB)

